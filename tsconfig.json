{
	"compilerOptions": {
		/* Language and Environment */
		"target": "ES2020",

		/* Modules */
		"module": "ESNext",
		"rootDir": "src",
        
		/* JavaScript Support */
		"allowJs": true,
		"checkJs": true,
        
		/* Emit */
		"outDir": "built" /* Redirect output structure to the directory. */,
		"noEmitOnError": true,
        
        /* Interop Constraints */
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
        "esModuleInterop": false /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
        "strictFunctionTypes": true /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */,
        "strictBindCallApply": true /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */,
        "strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
        "noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
        "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
        "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
        "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */

	},
	"include": ["src"]
}
